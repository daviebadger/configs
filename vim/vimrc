" *********
" Structure
" *********
"
" * Plugins
"
"   * Initialization
"
"     * CSS
"     * HTML
"     * Python
"     * RST
"
"   * Settings
"
"     * Airline
"     * AutoPairs
"     * GitGutter
"     * NERDCommenter
"     * NERDTree
"     * NERDTreeTabs
"     * Promptline
"     * PythonMode
"     * Riv
"     * Srcery
"     * Syntastic
"     * YouCompleteMe
"
" * Vim
"
"   * Clipboard
"   * Indentation
"   * Search
"   * Swaps
"   * Whitespaces
"   * Window

" Plugins
" =======

" Initialization
" --------------

call plug#begin('~/.vim/plugged')

Plug 'airblade/vim-gitgutter'
Plug 'bling/vim-airline'
" Plug 'ctrlpvim/ctrlp.vim'
Plug 'easymotion/vim-easymotion'
Plug 'edkolev/promptline.vim'
Plug 'jiangmiao/auto-pairs', {'commit': '3bd07a4'}
Plug 'jistr/vim-nerdtree-tabs'
Plug 'Konfekt/FastFold'
Plug 'roosta/srcery'
Plug 'scrooloose/nerdcommenter'
Plug 'scrooloose/nerdtree'
Plug 'scrooloose/syntastic'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-surround'
Plug 'valloric/youcompleteme', {'do': 'sudo python3 install.py'}
Plug 'Xuyuanp/nerdtree-git-plugin'

" CSS
" ^^^

Plug 'ap/vim-css-color'
Plug 'hail2u/vim-css3-syntax'

" HTML
" ^^^^

Plug 'alvan/vim-closetag'
Plug 'mattn/emmet-vim'
Plug 'othree/html5.vim'
Plug 'valloric/matchtagalways'
Plug 'vim-scripts/matchit.zip'

" Python
" ^^^^^^

Plug 'klen/python-mode'

" RST
" ^^^

Plug 'rykka/instantrst'
Plug 'Rykka/riv.vim'

call plug#end()

" Settings
" --------

" Airline
" ^^^^^^^

set laststatus=2

let g:airline#extensions#tabline#enabled = 1

" AutoPairs
" ^^^^^^^^^

let g:AutoPairsShortcutToggle='<F4>'

" GitGutter
" ^^^^^^^^^

set updatetime=250

" NERDCommenter
" ^^^^^^^^^^^^^

let g:NERDDefaultAlign = 'left'

let g:NERDCommentEmptyLines = 1
let g:NERDSpaceDelims = 1
let g:NERDTrimTrailingWhitespace = 1

let g:NERDCustomDelimiters = {'python': { 'left': '#' }}

" NERDTree
" ^^^^^^^^

let NERDTreeIgnore = [
    \ '^build$',
    \ '^dist$',
    \ '^\.git$',
    \ 'egg-info$',
    \ '^\.mypy_cache$',
    \ '^__pycache__$']
let NERDTreeShowHidden = 1

" open NERDTree if directory specified as argument to Vim

autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 1 && isdirectory(argv()[0]) && !exists("s:std_in") | exe 'NERDTree' argv()[0] | wincmd p | ene | endif

" NERDTreeTabs
" ^^^^^^^^^^^^

nnoremap <C-m> :NERDTreeFocusToggle<CR>
nnoremap <C-n> :NERDTreeMirrorToggle<CR>

" Promptline
" ^^^^^^^^^^

let g:promptline_powerline_symbols = 0
let g:promptline_preset = {
    \'a' : [ promptline#slices#user() ],
    \'b' : [ '\w' ],
    \'c' : [ promptline#slices#vcs_branch() ],
    \'y' : [ promptline#slices#python_virtualenv() ]}

" PythonMode
" ^^^^^^^^^^

let g:pymode_lint = 0
let g:pymode_rope = 0
let g:pymode_virtualenv = 0

" Riv
" ^^^

let g:riv_fold_level = 1
let g:riv_section_levels = '*=-^"'''

" Srcery
" ^^^^^^

set termguicolors

let g:srcery_underline = 0

colorscheme srcery

" Syntastic
" ^^^^^^^^^

set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_loc_list_height = 5

let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

let g:syntastic_html_checkers = ['tidy']
let g:syntastic_markdown_checkers = ['mdl']
let g:syntastic_python_checkers = ['flake8']
let g:syntastic_rst_checkers = ['rst2pseudoxml']

nnoremap <F3> :SyntasticCheck<CR>
nnoremap <C-X> :SyntasticReset<CR>

" close quick window with buffer at once

cabbrev <silent> bd <C-r>=(getcmdtype()==#':' && getcmdpos()==1 ? 'lclose\|bdelete' : 'bd')<CR>

" YouCompleteMe
" ^^^^^^^^^^^^^

let g:ycm_autoclose_preview_window_after_insertion = 1
let g:ycm_complete_in_strings = 0
let g:ycm_filetype_whitelist = {'python': 1}
let g:ycm_goto_buffer_command = 'horizontal-split'
let g:ycm_python_binary_path = 'python3'

nnoremap <leader>d :YcmCompleter GetDoc<CR>
nnoremap <leader>g :YcmCompleter GoToDefinitionElseDeclaration<CR>
nnoremap <leader>n :YcmCompleter GoToReferences<CR>

" Vim
" ===

" Clipboard
" ---------

set clipboard=unnamedplus

" Indention
" ---------

set expandtab
set smarttab

set shiftwidth=4
set softtabstop=4
set tabstop=4

autocmd Filetype html setlocal shiftwidth=2 softtabstop=2 tabstop=2
autocmd Filetype css setlocal shiftwidth=2 softtabstop=2 tabstop=2
autocmd FileType javascript setlocal shiftwidth=2 softtabstop=2 tabstop=2
autocmd FileType rst setlocal shiftwidth=3 softtabstop=3 tabstop=3
autocmd FileType yaml setlocal shiftwidth=2 softtabstop=2 tabstop=2

" Search
" ------

set hlsearch
set ignorecase
set incsearch
set smartcase

nnoremap <esc> :noh<return><esc>
nnoremap <esc>^[ <esc>^[

" Swaps
" -----

set directory=~/.vim/swaps//

" Whitespaces
" -----------

highlight ExtraWhitespace ctermbg=red guibg=red

match ExtraWhitespace /\s\+$/

autocmd BufWinEnter * match ExtraWhitespace /\s\+$/
autocmd InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
autocmd InsertLeave * match ExtraWhitespace /\s\+$/
autocmd BufWinLeave * call clearmatches()

" Window
" ------

set number
set colorcolumn=80

set nowrap

set splitbelow
set splitright
